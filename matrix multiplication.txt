            li reg0, 0
            ldd reg1, 0, 0              #matrix A[nxm], reg1 = n
            ldd reg2, 1, 0              #matrix A[nxm], reg2 = m
            ldd reg3, 2, 0              #matrix B[mxp], reg3 = m
            ldd reg4, 3, 0              #matrix B[mxp], reg4 = p
            mult reg15, reg1, reg2
            mult reg6, reg3, reg4
            add reg5, reg15, reg6
            addi reg5, reg5, 4          #memory position of result matrix

            li reg6, 0                  #reg6 = i loop index
for_i:      li reg7, 0                  #reg7 = j loop index
for_j:      li reg8, 0                  #reg8 = k loop index
            li reg9, 0                  #sum = 0
for_k:      mult reg10, reg6, reg2      
            add reg10, reg10, reg8      #reg10 = &A[i][k]
            ld reg11, mem(reg10), 4     #reg11 = A[i][k]
            mult reg12, reg8, reg2
            add reg12, reg12, reg7      
            add reg12, reg12, reg15     #reg12 = &B[k][j]
            ld reg13, mem(reg12), 4     #reg13 = B[k][j]
            mult reg11, reg11, reg13
            add reg9, reg9, reg11       #sum +=  A[i][k] * B[k][j]
            addi reg8, reg8, 1
            slt reg14, reg8, reg2
            bne reg14, reg0, for_k

            str reg9, mem(reg5), 0
            addi reg5, reg5, 1
            addi reg7, reg7, 1
            slt reg14, reg7, reg4
            bne reg14, reg0, for_j 

            addi reg6, reg6, 1
            slt reg14, reg6, reg1
            bne reg14, reg0, for_i
            eof